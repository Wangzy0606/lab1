name: Build(CI) and Inject Version

on:
  push:
    branches: [main, feature/github_actions]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up CMake
        uses: threeal/cmake-action@v2

      - name: Derive RELEASE_N
        id: version
        shell: bash
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.1")
          N=$(echo "$TAG" | awk -F. '{print $3}' | sed "s/[^0-9]//g")
          if [ -z "$N" ]; then N=1; fi
          echo "RELEASE_N=$N" >> $GITHUB_ENV
          echo "Using RELEASE_N=$N"

      - name: Configure & Build
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release  # 显式指定Release模式
          cmake --build . --config Release

      - name: Run binary
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ./build/Release/HelloWorld.exe
          else
            # 为Linux添加执行权限并正确指定路径
            chmod +x ./build/HelloWorld
            ./build/HelloWorld
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: HelloWorld-${{ matrix.os }}
          path: |
            build/HelloWorld
            build/Release/HelloWorld.exe
